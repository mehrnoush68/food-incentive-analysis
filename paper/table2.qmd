---
title: "My title"
subtitle: "My subtitle if needed"
author: 
  - Mehrnoush Mohammadi
  - Another author
thanks: "Code and data are available at: LINK."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(palmerpenguins)
library(knitr)
library(kableExtra)
```


# Introduction

You can and should cross-reference sections and sub-sections. We use @citeR and @rohan.

The remainder of this paper is structured as follows. @sec-data....



# Data {#sec-data}

Some of our data is of penguins (@fig-bills), from @palmerpenguins.

```{r}

#### Load Data ####
incentive_data <-
  read_csv(
    file = "../data/analysis_data/food_data.csv",
    show_col_types = FALSE,
    # skip = 1
  )

# Filter data for Figure 2 and 3
private_data <- incentive_data|>
  filter(private == 1)

public_data <- incentive_data|>
  filter(private == 0)


#https://tellingstorieswithdata.com/11-eda.html#united-states-population-and-income-data
incentive_data_sum <-
incentive_data |>
  as_tibble() |>
  mutate(state = rownames(incentive_data)) |>
  select(public, incentive, table_incentive_pr, table_size, male, black, grade, hispanic, free)
 
# Change all column contains '999' to NA
incentive_data_sum[incentive_data_sum == 999] <- NA

print(incentive_data_sum)

```


```{r}
# Public-0-no incentive: Children in the public treatment in which none of the grape cards were incentivized.
public_0_no_incentive <- incentive_data_sum |>
  filter(public == 1 & table_incentive_pr == 0)

# Calculate mean values for each numeric column excluding NAs
#https://www.r-bloggers.com/2023/07/exploring-data-with-colmeans-in-r-a-programmers-guide/
mean_values <- colMeans(public_0_no_incentive, na.rm = TRUE)

# Round mean values to two decimal places
mean_values <- round(mean_values, 2)

# Get the total number of rows
total_rows <- nrow(public_0_no_incentive)

# Create a new data frame with the mean values and total rows
sum_table <- data.frame(
  Group = 'Public-0',
  Variable = names(mean_values),
  Mean = mean_values,
  Observations = total_rows
)
sum_table_wide <- pivot_wider(sum_table, names_from = "Variable", values_from = "Mean")
print(sum_table_wide)
```


```{r}
# Public-50-no incentive: Children in the public treatment in which 50 percent of the grape cards were incentivized, and the child’s own card was not incentivized. 
public_50_no_incentive <- incentive_data_sum %>%
  filter(public == 1 & table_incentive_pr > 0 & table_incentive_pr < 1  & incentive == 0)

# Calculate mean values for each numeric column excluding NAs
mean_values <- colMeans(public_50_no_incentive, na.rm = TRUE)

# Round mean values to two decimal places
mean_values <- round(mean_values, 2)

# Get the total number of rows
total_rows <- nrow(public_50_no_incentive)

# Create a new data frame with the mean values and total rows
sum_table <- data.frame(
  Group = 'Public-50-no incentive',
  Variable = names(mean_values),
  Mean = mean_values,
  Observations = total_rows
)

sum_table <- pivot_wider(sum_table, names_from = "Variable", values_from = "Mean")

# Append sum_table to sum_table_wide
sum_table_wide <- rbind(sum_table_wide, sum_table)

print(sum_table_wide)
```


```{r}
# Public-50-incentive: Children in the public treatment in which 50 percent of the grape cards were incentivized, and the child’s own card was incentivized
Public_50_incentive <- incentive_data_sum %>%
  filter(public == 1 & table_incentive_pr > 0 & table_incentive_pr < 1  & incentive == 1)


# Calculate mean values for each numeric column excluding NAs
mean_values <- colMeans(Public_50_incentive, na.rm = TRUE)

# Round mean values to two decimal places
mean_values <- round(mean_values, 2)

# Get the total number of rows
total_rows <- nrow(Public_50_incentive)

# Create a new data frame with the mean values and total rows
sum_table <- data.frame(
  Group = 'Public-50-incentive',
  Variable = names(mean_values),
  Mean = mean_values,
  Observations = total_rows
)

sum_table <- pivot_wider(sum_table, names_from = "Variable", values_from = "Mean")

# Append new_data to sum_table_wide
sum_table_wide <- rbind(sum_table_wide, sum_table)

print(sum_table_wide)

```



```{r}
# Public-100-incentive: Children in the public treatment in which all of the grape cards were incentivized.
Public_100_incentive <- incentive_data_sum %>%
  filter(public == 1 & table_incentive_pr == 1 & incentive == 1)

# Calculate mean values for each numeric column excluding NAs
mean_values <- colMeans(Public_100_incentive, na.rm = TRUE)

# Round mean values to two decimal places
mean_values <- round(mean_values, 2)

# Get the total number of rows
total_rows <- nrow(Public_100_incentive)

# Create a new data frame with the mean values and total rows
sum_table <- data.frame(
  Group = 'Public-100-incentive',
  Variable = names(mean_values),
  Mean = mean_values,
  Observations = total_rows
)

sum_table <- pivot_wider(sum_table, names_from = "Variable", values_from = "Mean")

# Append new_data to sum_table_wide
sum_table_wide <- rbind(sum_table_wide, sum_table)

print(sum_table_wide)


```

```{r}

combined_table <- rbind(public_0_no_incentive, public_50_no_incentive, Public_50_incentive, Public_100_incentive)

mean_values <- colMeans(combined_table, na.rm = TRUE)

# Round mean values to two decimal places
mean_values <- round(mean_values, 2)

# Get the total number of rows
total_rows <- nrow(combined_table)

# Create a new data frame with the mean values and total rows
sum_table <- data.frame(
  Group = 'Total',
  Variable = names(mean_values),
  Mean = mean_values,
  Observations = total_rows
)

sum_table <- pivot_wider(sum_table, names_from = "Variable", values_from = "Mean")

# Append new_data to sum_table_wide
sum_table_wide <- rbind(sum_table_wide, sum_table)

```


```{r}
print(sum_table_wide)
```


```{r}
sum_table_final <-
    sum_table_wide |>
      as_tibble() |>
      mutate(state = rownames(sum_table_wide)) |>
      select(Group, Observations, table_size, male, grade, black, hispanic, free)

sum_table_final |>
  #slice (1:10) |>
  kable(
    col.names = c('Group', 'Observations', 'Table Size', 'Percent of boys', 'Grade', 'Black', 'Hispanic', 'Free Lunch'),
    digits = 3
  )
```




```{r}
### Replicate Table 1 ###

table1 <- incentive_data |>
  tibble()|>
  select(table_incentive_pr,incentive) |>
  group_by(table_incentive_pr) |>
  summarise(not_incentivized = sum(1 - incentive),
            incentivized = sum(incentive))
table1 <- rbind(table1, c(10,colSums(table1[, 2:3])))

kable1 <- gsub("10.000", "TOTAL", kable(table1,
                col.names = c("Table proportion incentivized", 
                "Not incentivized", 
                "Incentivized"),
                digits = 3) 
)

kable1 <- add_header_above(kable1,header = c("","Observations by child type" = 2))|>
  column_spec(1:3,width = "30mm")
kable1

```





```{r}
#| label: fig-bills
#| fig-cap: Bills of penguins
#| echo: false

ggplot(penguins, aes(x = island, fill = species)) +
  geom_bar(alpha = 0.8) +
  scale_fill_manual(values = c("darkorange","purple","cyan4"),
                    guide = "none") +
  theme_minimal() +
  facet_wrap(~species, ncol = 1) +
  coord_flip()
```

Talk more about it.

And also planes (@fig-planes). (You can change the height and width, but don't worry about doing that until you have finished every other aspect of the paper - Quarto will try to make it look nice and the defaults usually work well once you have enough text.)

```{r}
#| label: fig-planes
#| fig-cap: Relationship between wing length and width
#| echo: false
#| warning: false
#| message: false

analysis_data <- read_csv(here::here("data/analysis_data/analysis_data.csv"))

analysis_data |> 
  ggplot(aes(x = width, y = length)) +
  geom_point(alpha = 0.8) +
  theme_minimal() +
  labs(x = "Wing width (mm)",
       y = "Wing length (mm)")
```

Talk way more about it. 



# Model

The goal of our modelling strategy is twofold. Firstly,...

Here we briefly describe the Bayesian analysis model used to investigate... Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up

Define $y_i$ as the number of seconds that the plane remained aloft. Then $\beta_i$ is the wing width and $\gamma_i$ is the wing length, both measured in millimeters.  

\begin{align} 
y_i|\mu_i, \sigma &\sim \mbox{Normal}(\mu_i, \sigma) \\
\mu_i &= \alpha + \beta_i + \gamma_i\\
\alpha &\sim \mbox{Normal}(0, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\gamma &\sim \mbox{Normal}(0, 2.5) \\
\sigma &\sim \mbox{Exponential}(1)
\end{align}

We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.


### Model justification

We expect a positive relationship between the size of the wings and time spent aloft. In particular...

We can use maths by including latex between dollar signs, for instance $\theta$.


# Results

Our results are summarized in @tbl-modelresults.

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

library(rstanarm)

first_model <-
  readRDS(file = here::here("models/first_model.rds"))
```

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: "Explanatory models of flight time based on wing width and wing length"
#| warning: false

modelsummary::modelsummary(
  list(
    "First model" = first_model
  ),
  statistic = "mad",
  fmt = 2
)
```




# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows... 

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

pp_check(first_model) +
  theme_classic() +
  theme(legend.position = "bottom")

posterior_vs_prior(first_model) +
  theme_minimal() +
  scale_color_brewer(palette = "Set1") +
  theme(legend.position = "bottom") +
  coord_flip()
```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. It shows... This suggests...

@fig-stanareyouokay-2 is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

plot(first_model, "trace")

plot(first_model, "rhat")
```



\newpage


# References


